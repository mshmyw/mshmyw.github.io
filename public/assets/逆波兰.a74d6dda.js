import{c as u}from"./index.1fa5d347.js";const E={},C="wrapper";function F({components:B,...l}){return u(C,{...E,...l,components:B,mdxType:"MDXLayout"},u("h1",null,"\u7528\u6808\u8FD0\u7B97\u56DB\u5219\u8FD0\u7B97\u539F\u7406"),u("p",null,"\u5E73\u65F6\u7684\u56DB\u5219\u8FD0\u7B97\u90FD\u662F\u6211\u4EEC\u4EBA\u6613\u4E8E\u7406\u89E3\u7684\u5F62\u5F0F\uFF0C\u5373\u662F\u4E2D\u7F00\u5F0F\uFF0C\u800C\u8BA1\u7B97\u673A\u4E2D\u8FD0\u7B97\u5219\u66F4\u9002\u5408\u540E\u7F00\uFF0C\u5373\u9006\u6CE2\u5170\u5F0F\u3002\u5B83\u4E3B\u8981\u501F\u52A9\u4E8E\u6808\u3002"),u("p",null,"\u4E00\u5B9A\u8981\u5BF9\u6808\u6709\u6DF1\u523B\u7684\u7406\u89E3\u3002\u5B83\u7684\u4F5C\u7528\u662F\u4EC0\u4E48\u4EC0\u4E48\u5462\uFF1F"),u("p",null,"\u7B97\u6CD5\uFF1A"),u("p",null,"\u4E00\u3001 \u5C06\u4E2D\u7F00\u8868\u8FBE\u5F0F\u8F6C\u6362\u6210\u540E\u7F00\u8868\u8FBE\u5F0F\u7B97\u6CD5\uFF1A"),u("p",null,"1\u3001\u4ECE\u5DE6\u81F3\u53F3\u626B\u63CF\u4E00\u4E2D\u7F00\u8868\u8FBE\u5F0F\u3002"),u("p",null,"2\u3001\u82E5\u8BFB\u53D6\u7684\u662F\u64CD\u4F5C\u6570\uFF0C\u5219\u5224\u65AD\u8BE5\u64CD\u4F5C\u6570\u7684\u7C7B\u578B\uFF0C\u5E76\u5C06\u8BE5\u64CD\u4F5C\u6570\u5B58\u5165\u64CD\u4F5C\u6570\u5806\u6808"),u("p",null,"3\u3001\u82E5\u8BFB\u53D6\u7684\u662F\u8FD0\u7B97\u7B26"),u("p",null,' (1) \u8BE5\u8FD0\u7B97\u7B26\u4E3A\u5DE6\u62EC\u53F7"("\uFF0C\u5219\u76F4\u63A5\u5B58\u5165\u8FD0\u7B97\u7B26\u5806\u6808\u3002'),u("p",null,' (2) \u8BE5\u8FD0\u7B97\u7B26\u4E3A\u53F3\u62EC\u53F7")"\uFF0C\u5219\u8F93\u51FA\u8FD0\u7B97\u7B26\u5806\u6808\u4E2D\u7684\u8FD0\u7B97\u7B26\u5230\u64CD\u4F5C\u6570\u5806\u6808\uFF0C\u76F4\u5230\u9047\u5230\u5DE6\u62EC\u53F7\u4E3A\u6B62\u3002'),u("p",null," (3) \u8BE5\u8FD0\u7B97\u7B26\u4E3A\u975E\u62EC\u53F7\u8FD0\u7B97\u7B26\uFF1A"),u("p",null,"\u200B    (a) \u82E5\u8FD0\u7B97\u7B26\u5806\u6808\u6808\u9876\u7684\u8FD0\u7B97\u7B26\u4E3A\u62EC\u53F7\uFF0C\u5219\u76F4\u63A5\u5B58\u5165\u8FD0\u7B97\u7B26\u5806\u6808\u3002"),u("p",null,"\u200B    (b) \u82E5\u6BD4\u8FD0\u7B97\u7B26\u5806\u6808\u6808\u9876\u7684\u8FD0\u7B97\u7B26\u4F18\u5148\u7EA7\u9AD8\u6216\u76F8\u7B49\uFF0C\u5219\u76F4\u63A5\u5B58\u5165\u8FD0\u7B97\u7B26\u5806\u6808\u3002"),u("p",null,"\u200B    (c) \u82E5\u6BD4\u8FD0\u7B97\u7B26\u5806\u6808\u6808\u9876\u7684\u8FD0\u7B97\u7B26\u4F18\u5148\u7EA7\u4F4E\uFF0C\u5219\u8F93\u51FA\u6808\u9876\u8FD0\u7B97\u7B26\u5230\u64CD\u4F5C\u6570\u5806\u6808\uFF0C\u5E76\u5C06\u5F53\u524D\u8FD0\u7B97\u7B26\u538B\u5165\u8FD0\u7B97\u7B26\u5806\u6808\u3002"),u("p",null,"4\u3001\u5F53\u8868\u8FBE\u5F0F\u8BFB\u53D6\u5B8C\u6210\u540E\u8FD0\u7B97\u7B26\u5806\u6808\u4E2D\u5C1A\u6709\u8FD0\u7B97\u7B26\u65F6\uFF0C\u5219\u4F9D\u5E8F\u53D6\u51FA\u8FD0\u7B97\u7B26\u5230\u64CD\u4F5C\u6570\u5806\u6808\uFF0C\u76F4\u5230\u8FD0\u7B97\u7B26\u5806\u6808\u4E3A\u7A7A\u3002"),u("p",null,"\u4E8C\u3001\u9006\u6CE2\u5170\u8868\u8FBE\u5F0F\u6C42\u503C\u7B97\u6CD5\uFF1A"),u("p",null,"1\u3001\u5FAA\u73AF\u626B\u63CF\u8BED\u6CD5\u5355\u5143\u7684\u9879\u76EE\u3002"),u("p",null,"2\u3001\u5982\u679C\u626B\u63CF\u7684\u9879\u76EE\u662F\u64CD\u4F5C\u6570\uFF0C\u5219\u5C06\u5176\u538B\u5165\u64CD\u4F5C\u6570\u5806\u6808\uFF0C\u5E76\u626B\u63CF\u4E0B\u4E00\u4E2A\u9879\u76EE\u3002"),u("p",null,"3\u3001\u5982\u679C\u626B\u63CF\u7684\u9879\u76EE\u662F\u4E00\u4E2A\u4E8C\u5143\u8FD0\u7B97\u7B26\uFF0C\u5219\u5BF9\u6808\u7684\u9876\u4E0A\u4E24\u4E2A\u64CD\u4F5C\u6570\u6267\u884C\u8BE5\u8FD0\u7B97\u3002"),u("p",null,"4\u3001\u5982\u679C\u626B\u63CF\u7684\u9879\u76EE\u662F\u4E00\u4E2A\u4E00\u5143\u8FD0\u7B97\u7B26\uFF0C\u5219\u5BF9\u6808\u7684\u6700\u9876\u4E0A\u64CD\u4F5C\u6570\u6267\u884C\u8BE5\u8FD0\u7B97\u3002"),u("p",null,"5\u3001\u5C06\u8FD0\u7B97\u7ED3\u679C\u91CD\u65B0\u538B\u5165\u5806\u6808\u3002"),u("p",null,"6\u3001\u91CD\u590D\u6B65\u9AA42-5\uFF0C\u5806\u6808\u4E2D\u5373\u4E3A\u7ED3\u679C\u503C\u3002"),u("h2",null,"python"),u("pre",null,u("code",{parentName:"pre"},`import sys 
def middle_to_last(express_list):
  """
  \u5982\uFF1A 9 + (3 - 1) * 3 + 7 / 2  => 9 3 1 - 3 * + 7 2 / +
  1 \u4E2D\u7F00\u8F6C\u5316\u6210\u540E\u7F00\uFF08\u6240n\u9006\u6CE2\u5170\u5F0F\uFF0C\u501F\u52A9\u7B26\u53F7\u6808\uFF09
  2 \u540E\u7F00\u8FD0\u7B97\uFF08\u501F\u52A9\u6570\u5B57\u6808\uFF09
  \u6CE8\u610F\uFF1A\u7B97\u7B26\u6709\u4F18\u5148\u7EA7
  \u601D\u8003\uFF1A\u4EC0\u4E48\u65F6\u5019\u8FDB\u6808\u3001\u51FA\u6808\uFF1F

  """
  symbol_stack = []
  first_priority = ['&', '|', '*', '/']
  second_priority = ['+', '-']
  last_list = []
  for idx, item in enumerate(express_list):
    if item.isdigit():
      last_list.append(item)
    elif item == '(':
      symbol_stack.append(item)
    elif item == ')':
      while len(symbol_stack) != 0:
        symbol = symbol_stack.pop()
        if symbol == '(':
          break
        last_list.append(symbol)
    elif item in first_priority:
      symbol_stack.append(item)
    elif item in second_priority:
      if len(symbol_stack) == 0:
        symbol_stack.append(item)
        continue
      while len(symbol_stack) != 0:
        if symbol_stack[-1] not in first_priority:
          symbol_stack.append(item)
          break
        last_list.append(symbol_stack.pop())
  
  while len(symbol_stack):
    last_list.append(symbol_stack.pop())
  print(symbol_stack, ' '.join(last_list))

express_list = list('1+(0-2)')
raw = '9 + (3 - 1) * 3 + 7 / 2 '.split()
express_list = list(''.join(raw))
print(express_list)
middle_to_last(express_list)
`)))}F.isMDXComponent=!0;var t=Object.freeze(Object.defineProperty({__proto__:null,default:F},Symbol.toStringTag,{value:"Module"}));const D={};D.main=t;export{D as default};
